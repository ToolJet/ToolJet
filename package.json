{
  "name": "tooljet",
  "version": "1.18.0",
  "description": "ToolJet is an open-source low-code framework to build and deploy internal tools.",
  "engines": {
    "node": "18.3.0",
    "npm": "8.11.0"
  },
  "lint-staged": {
    "./frontend/src/**/*.{js,jsx}": [
      "eslint --fix"
    ],
    "./server/{src,test,plugins,scripts,migrations}/**/*.ts": [
      "eslint --fix"
    ],
    "./plugins/{packages}/**/*.ts": [
      "eslint --fix"
    ]
  },
  "devDependencies": {
    "@tooljet/cli": "^0.0.13",
    "eslint": "^8.34.0",
    "husky": "^8.0.3",
    "lint-staged": "^13.1.2"
  },
  "scripts": {
    "prebuild:plugins": "npm run install:plugins",
    "install:plugins": "npm --prefix plugins install",
    "build:plugins": "npm --prefix plugins run build",
    "prebuild:plugins:prod": "npm run install:plugins",
    "build:plugins:prod": "NODE_ENV=production npm run build:plugins",
    "postbuild:plugins:prod": "npm --prefix plugins prune --production",
    "prebuild:frontend": "npm --prefix frontend install --production=false",
    "build:frontend": "NODE_ENV=production npm --prefix frontend run build",
    "postbuild:frontend": "npm --prefix frontend prune --production",
    "prebuild:server": "npm --prefix server install --production=false",
    "build:server": "NODE_ENV=production npm --prefix server run build",
    "postbuild:server": "npm --prefix server prune --production",
    "build": "npm run build:plugins:prod && npm run build:frontend && npm run build:server",
    "start:prod": "npm --prefix server run start:prod",
    "db:create": "npm --prefix server run db:create",
    "db:create:prod": "npm --prefix server run db:create:prod",
    "db:migrate": "npm --prefix server run db:migrate",
    "db:migrate:prod": "npm --prefix server run db:migrate:prod",
    "db:seed": "npm --prefix server run db:seed",
    "db:seed:prod": "npm --prefix server run db:seed:prod",
    "db:setup": "npm --prefix server run db:setup",
    "db:setup:prod": "npm --prefix server run db:setup:prod",
    "db:reset": "npm --prefix server run db:reset",
    "db:drop": "npm --prefix server run db:drop",
    "deploy": "cp -a frontend/build/. public/",
    "heroku-postbuild": "./heroku-postbuild.sh",
    "prepare": "husky install"
  }
}
