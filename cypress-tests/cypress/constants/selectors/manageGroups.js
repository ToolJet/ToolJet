export const cyParamName = (paramName = "") => {
  return paramName.toLowerCase().replace(/\s+/g, "-");
};
export const groupsSelector = {
  pageTitle: "[data-cy=user-groups-title]",
  createNewGroupButton: "[data-cy=create-new-group-button]",
  tableHeader: "[data-cy=table-header]",
  groupName: "[data-cy=group-name]",
  addNewGroupModalTitle: '[data-cy="create-new-group-title"]',
  groupNameInput: "[data-cy=group-name-input]",
  cancelButton: "[data-cy=cancel-button]",
  createGroupButton: "[data-cy=create-group-button]",
  adminListItem: '[data-cy="admin-list-item"]',
  adminTitle: '[data-cy="admin-title"]',
  adminAccessHelperText: '[data-cy="helper-text-admin-app-access"]',
  appCreateHelperText: '[data-cy="app-create-helper-text"]',
  appDeleteHelperText: '[data-cy="app-delete-helper-text"]',
  resourceHeader: '[data-cy="resource-header"]:eq(1)',
  userGroup: "[data-cy=user-groups]",
  appsLink: "[data-cy=apps-link]",
  usersLink: "[data-cy=users-link]",
  tableslink: "[data-cy=tables-link]",
  permissionsLink: "[data-cy=permissions-link]",
  granularLink: "[data-cy=granular-access-link]",
  searchBox: '[data-cy="select-search"]',
  appSearchBox: "[data-cy=select-search]>>>>>.dropdown-heading-value > .gray",
  searchBoxOptions: ".panel-content",
  appAddButton: "[data-cy=add-button]",
  addButton: '[data-cy="add-button"]',
  nameTableHeader: ".active [data-cy=name-header]",
  permissionstableHedaer: ".active [data-cy=permissions-header]",
  emailTableHeader: "[data-cy=email-header]",
  resourcesTableHeader: "[data-cy=resource-header]",
  resourcesApps: "[data-cy=resource-apps]",
  resourceLabel: '[data-cy="resource-label"]',
  allAppsRadio: '[data-cy="all-apps-radio"]',
  allAppsLabel: '[data-cy="all-apps-label"]',
  allAppsHelperText: '[data-cy="all-apps-info-text"]',
  customradio: '[data-cy="custom-radio"]',
  customLabel: '[data-cy="custom-label"]',
  customHelperText: '[data-cy="custom-info-text"]',
  resourcesFolders: "[data-cy=resource-folders]",
  resourcesWorkspaceVar: '[data-cy="resource-workspace-variable"]',
  appsCreateCheck: "[data-cy=app-create-checkbox]",
  appsCreateLabel: "[data-cy=app-create-label]",
  appsDeleteCheck: "[data-cy=app-delete-checkbox]",
  appsDeleteLabel: "[data-cy=app-delete-label]",
  foldersCreateCheck: "[data-cy=folder-create-checkbox]",
  foldersCreateLabel: "[data-cy=folder-create-label]",
  foldersHelperText: '[data-cy="folder-helper-text"]',
  workspaceVarCheckbox: '[data-cy="env-variable-checkbox"]',
  appsText: '[data-cy="apps-text"]',
  appEditRadio: '[data-cy="app-edit-radio"]',
  appEditLabel: '[data-cy="app-edit-label"]',
  appEditHelperText: '[data-cy="app-edit-helper-text"]',
  appViewRadio: '[data-cy="app-view-radio"]',
  appViewLabel: '[data-cy="app-view-label"]',
  appViewHelperText: '[data-cy="app-view-helper-text"]',
  appHideCheckbox: '[data-cy="app-hide-from-dashboard-radio"]',
  appHideHelperText: '[data-cy="app-hide-from-dashboard-helper-text"]',
  appHideLabel: '[data-cy="app-hide-from-dashboard-label"]',
  addAppButton: '[data-cy="add-apps-buton"]',
  addEditPermissionModal: '[data-cy = "add-edit-permission-modal"]',
  addEditPermissionModalTitle: '[data-cy="modal-title"]',
  permissionNameLabel: '[data-cy="permission-name-label"]',
  permissionNameInput: '[data-cy="permission-name-input"]',
  permissionNameHelperText: '[data-cy="permission-name-help-text"]',
  permissionLabel: '[data-cy="permission-label"]',
  editPermissionLabel: '[data-cy="edit-permission-label"]',
  editPermissionHelperText: '[data-cy="edit-permission-info-text"]',
  viewPermissionLabel: '[data-cy="view-permission-label"]',
  viewPermissionHelperText: '[data-cy="view-permission-info-text"]',
  hidePermissionInput: '[data-cy="hide-from-dashboard-permission-input"]',
  deletePermissionIcon: '[data-cy="delete-button"]',
  deleteMessage: '[data-cy="modal-message"]',
  yesButton: '[data-cy="yes-button"]',
  confirmText: "[data-cy=modal-message]",
  confirmCancelButton: "[data-cy=confirm-cancel-button]",
  confirmYesButton: "[data-cy=confirm-yes-button]",
  multiSelectSearch: '[data-cy="multi-select-search"]',
  multiSelectSearchInput:
    '[data-cy="multi-select-search"]>>>>.select-search__input',
  workspaceCreateLabel: '[data-cy="workspace-variable-create-label"]',
  workspaceHelperText: '[data-cy="workspace-constants-helper-text"]',
  selectAddButton: '[data-cy="add-button"]',
  textDefaultGroup: '[data-cy="text-default-group"]',
  helperTextNoAppsAdded: '[data-cy="helper-text-no-apps-added"]',
  helperTextPermissions: '[data-cy="helper-text-user-groups-permissions"]',
  helperTextAllUsersIncluded: '[data-cy="helper-text-all-user-included"]',
  helperTextAdminAppAccess: '[data-cy="helper-text-admin-app-access"]',
  helperTextAdminPermissions: '[data-cy="helper-text-admin-permissions"]',
  updateGroupNameModalTitle: '[data-cy="update-group-title"]',
  editGranularPermissionIcon: '[data-cy="edit-permission-button"]',
  granularAccessPermission: '[data-cy="granular-access-permission"]',
  groupChip: '[data-cy="group-chip"]',
  groupLink: (groupname) => {
    return `[data-cy="${cyParamName(groupname)}-list-item"]`;
  },
  updateGroupNameLink: (groupname) => {
    return `[data-cy="${cyParamName(groupname)}-group-name-update-link"]`;
  },
  deleteGroupLink: (groupname) => {
    return `[data-cy="${cyParamName(groupname)}-group-delete-link"]`;
  },
  mutiSelectAddButton: (groupname) => {
    return `[data-cy="${cyParamName(groupname)}-group-add-button"]`;
  },

  groupPageTitle: (groupname) => {
    return `[data-cy="${cyParamName(groupname)}-title"]`;
  },
  userRow: (email) => {
    return `[data-cy="${cyParamName(email)}-user-row"]`;
  },
  groupOptionIcon: (groupName) => {
    return `[data-cy="${cyParamName(groupName)}-list-item"] > :nth-child(2) > .tj-base-btn`
  },
  duplicateOption: '[data-cy="duplicate-group-card-option"]',
  deleteGroupOption: '[data-cy="delete-group-card-option"]',
  usersCheckInput: '[data-cy="users-check-input"]',
  permissionCheckInput: '[data-cy="permissions-check-input"]',
  appsCheckInput: '[data-cy="apps-check-input"]',
  confimButton: '[data-cy="confim-button"]',
  duplicatedGroupLink: (groupName) => {
    return `[data-cy="${cyParamName(groupName)}_copy-list-item"]`
  },

};
